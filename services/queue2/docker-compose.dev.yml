version: '3.4'
services:

    queue_pg:
        image: fetchq/fetchq:10.4-1.3.0
        ports:
            - ${PG_PORT:-5432}:5432
        networks:
            - wilder
        environment:
            POSTGRES_USER: ${PG_USERNAME:-cerberus}
            POSTGRES_PASSWORD: ${PG_PASSWORD:-cerberus}
            POSTGRES_DB: ${PG_DATABASE:-cerberus}
        volumes:
            - ${HUMBLE_DATA}/queue_pg:/var/lib/postgresql/data
            - ${HUMBLE_BACKUP}/queue_pg:/backup
        restart: always
    
    storage_pg:
        image: fetchq/fetchq:10.4-1.3.0
        ports:
            - ${STORAGE_PG_PORT:-5433}:5432
        networks:
            - wilder
        environment:
            POSTGRES_USER: ${STORAGE_PG_USERNAME:-cerberus}
            POSTGRES_PASSWORD: ${STORAGE_PG_PASSWORD:-cerberus}
            POSTGRES_DB: ${STORAGE_PG_DATABASE:-cerberus}
        volumes:
            - ${HUMBLE_DATA}/storage_pg:/var/lib/postgresql/data
            - ${HUMBLE_BACKUP}/storage_pg:/backup
        restart: always

    elasticsearch:
        image: elasticsearch:7.2.0
        ports:
            - ${ELASTICSEARCH_PORT:-9200}:9200
        networks:
            - wilder
        environment:
            - discovery.type=single-node
            # - discovery.seed_hosts=es02
            # - cluster.initial_master_nodes=es01,es02
            # - cluster.name=docker-cluster
            # - bootstrap.memory_lock=true
            # - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        # ulimits:
        #     memlock:
        #       soft: -1
        #       hard: -1
        volumes:
            - ${HUMBLE_DATA}/elasticsearch:/usr/share/elasticsearch/data

#
# REAL WORKER PROCESSES
#

    example_node:
        image: node:12.2-alpine
        networks:
            - wilder
        volumes:
            - ./nodes/example-node:/usr/src/app
        environment:
            NODE_ENV: development
            LOG_LEVEL: ${LOG_LEVEL-info}
            PG_HOST: ${PG_HOST-queue_pg}
            PG_PORT: ${PG_PORT-5432}
            PG_USERNAME: ${PG_USERNAME-cerberus}
            PG_PASSWORD: ${PG_PASSWORD-cerberus}
            PG_DATABASE: ${PG_DATABASE-cerberus}
            STORAGE_PG_HOST: ${STORAGE_PG_HOST-storage_pg}
            STORAGE_PG_PORT: ${STORAGE_PG_PORT-5433}
            STORAGE_PG_USERNAME: ${STORAGE_PG_USERNAME-cerberus}
            STORAGE_PG_PASSWORD: ${STORAGE_PG_PASSWORD-cerberus}
            STORAGE_PG_DATABASE: ${STORAGE_PG_DATABASE-cerberus}
        working_dir: /usr/src/app
        entrypoint: ["yarn", "start:dev"]
    
    discovery:
        image: node:12.2-alpine
        networks:
            - wilder
        volumes:
            - ./nodes/discovery:/usr/src/app
        environment:
            NODE_ENV: development
            LOG_LEVEL: ${LOG_LEVEL-info}
            PG_HOST: ${PG_HOST-queue_pg}
            PG_PORT: ${PG_PORT-5432}
            PG_USERNAME: ${PG_USERNAME-cerberus}
            PG_PASSWORD: ${PG_PASSWORD-cerberus}
            PG_DATABASE: ${PG_DATABASE-cerberus}
            STORAGE_PG_HOST: ${STORAGE_PG_HOST-storage_pg}
            STORAGE_PG_PORT: ${STORAGE_PG_PORT-5433}
            STORAGE_PG_USERNAME: ${STORAGE_PG_USERNAME-cerberus}
            STORAGE_PG_PASSWORD: ${STORAGE_PG_PASSWORD-cerberus}
            STORAGE_PG_DATABASE: ${STORAGE_PG_DATABASE-cerberus}
        working_dir: /usr/src/app
        entrypoint: ["yarn", "start:dev"]

    first-blood:
        image: node:12.2-alpine
        networks:
            - wilder
        volumes:
            - ./nodes/first-blood:/usr/src/app
        environment:
            NODE_ENV: development
            LOG_LEVEL: ${LOG_LEVEL-info}
            PG_HOST: ${PG_HOST-queue_pg}
            PG_PORT: ${PG_PORT-5432}
            PG_USERNAME: ${PG_USERNAME-cerberus}
            PG_PASSWORD: ${PG_PASSWORD-cerberus}
            PG_DATABASE: ${PG_DATABASE-cerberus}
            STORAGE_PG_HOST: ${STORAGE_PG_HOST-storage_pg}
            STORAGE_PG_PORT: ${STORAGE_PG_PORT-5433}
            STORAGE_PG_USERNAME: ${STORAGE_PG_USERNAME-cerberus}
            STORAGE_PG_PASSWORD: ${STORAGE_PG_PASSWORD-cerberus}
            STORAGE_PG_DATABASE: ${STORAGE_PG_DATABASE-cerberus}
        working_dir: /usr/src/app
        entrypoint: ["yarn", "start:dev"]

    profile-tracker:
        image: node:12.2-alpine
        networks:
            - wilder
        volumes:
            - ./nodes/profile-tracker:/usr/src/app
        environment:
            NODE_ENV: development
            LOG_LEVEL: ${LOG_LEVEL-info}
            PG_HOST: ${PG_HOST-queue_pg}
            PG_PORT: ${PG_PORT-5432}
            PG_USERNAME: ${PG_USERNAME-cerberus}
            PG_PASSWORD: ${PG_PASSWORD-cerberus}
            PG_DATABASE: ${PG_DATABASE-cerberus}
            STORAGE_PG_HOST: ${STORAGE_PG_HOST-storage_pg}
            STORAGE_PG_PORT: ${STORAGE_PG_PORT-5433}
            STORAGE_PG_USERNAME: ${STORAGE_PG_USERNAME-cerberus}
            STORAGE_PG_PASSWORD: ${STORAGE_PG_PASSWORD-cerberus}
            STORAGE_PG_DATABASE: ${STORAGE_PG_DATABASE-cerberus}
        working_dir: /usr/src/app
        entrypoint: ["yarn", "start:dev"]

    post-tracker:
        image: node:12.2-alpine
        networks:
            - wilder
        volumes:
            - ./nodes/post-tracker:/usr/src/app
        environment:
            NODE_ENV: development
            LOG_LEVEL: ${LOG_LEVEL-info}
            PG_HOST: ${PG_HOST-queue_pg}
            PG_PORT: ${PG_PORT-5432}
            PG_USERNAME: ${PG_USERNAME-cerberus}
            PG_PASSWORD: ${PG_PASSWORD-cerberus}
            PG_DATABASE: ${PG_DATABASE-cerberus}
            STORAGE_PG_HOST: ${STORAGE_PG_HOST-storage_pg}
            STORAGE_PG_PORT: ${STORAGE_PG_PORT-5433}
            STORAGE_PG_USERNAME: ${STORAGE_PG_USERNAME-cerberus}
            STORAGE_PG_PASSWORD: ${STORAGE_PG_PASSWORD-cerberus}
            STORAGE_PG_DATABASE: ${STORAGE_PG_DATABASE-cerberus}
        working_dir: /usr/src/app
        entrypoint: ["yarn", "start:dev"]

#
# Networks definition
#

networks:
    wilder:
